name: Kotlin CICD

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - name: Set up GIT
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.mail jan-hendrik.hausner@outlook

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://npm.pkg.github.com'

      - name: Build with Gradle
        run: ./gradlew build --no-daemon
        env:
          GITHUB_AUTHORIZATION_TOKEN: ${{ secrets.API_GITHUB_AUTHORIZATION_TOKEN }}

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.36.0
        id: tag-version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: minor
          RELEASE_BRANCHES: master
          PRERELEASE_SUFFIX: beta

      - name: Update Typescript package version
        run: npm version ${{ steps.tag-version.outputs.new_tag }} --prefix ./build/${GITHUB_REPOSITORY#*/}/typescript

      - name: Publish Typescript library
        run: npm publish package.json --folder ./build/${GITHUB_REPOSITORY#*/}/typescript
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Kotlin library
        run: ./gradlew -p build/${GITHUB_REPOSITORY#*/}/kotlin publish --no-daemon
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DATA_MODEL_VERSION: ${{ steps.tag-version.outputs.new_tag }}

      - name: Docker Login
        uses: docker/login-action@v1.14.1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Build Docker Image
        run: docker build . --file Dockerfile --tag ${{ github.repository }}:${{ steps.tag-version.outputs.new_tag }} --tag ${{ github.repository }}:latest

      - name: Push versioned Docker Image
        run: docker push ${{ github.repository }}:${{ steps.tag-version.outputs.new_tag }}

      - name: Push latest Docker Image
        run: docker push ${{ github.repository }}:latest