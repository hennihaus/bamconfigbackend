{
  "openapi" : "3.0.3",
  "info" : {
    "contact" : {
      "email" : "jan-hendrik.hausner@outlook.com",
      "name" : "Jan-Hendrik Hausner"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "https://github.com/hennihaus/bamconfigbackend/blob/master/LICENSE"
    },
    "title" : "BAM Business Integration - ConfigBackend API",
    "version" : "1.0.0"
  },
  "servers" : [ {
    "description" : "Base-URL",
    "url" : "http://localhost:8080/v1"
  } ],
  "paths" : {
    "/teams" : {
      "get" : {
        "operationId" : "getAllTeams",
        "parameters" : [ {
          "allowReserved" : false,
          "explode" : false,
          "in" : "query",
          "name" : "cursor",
          "required" : false,
          "schema" : {
            "format" : "byte",
            "minLength" : 3,
            "type" : "string"
          },
          "style" : "form"
        }, {
          "allowReserved" : false,
          "example" : "10",
          "explode" : false,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "minimum" : 0,
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "allowReserved" : false,
          "example" : "REGULAR",
          "explode" : false,
          "in" : "query",
          "name" : "type",
          "required" : false,
          "schema" : {
            "format" : "enum",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "allowReserved" : false,
          "example" : "Team",
          "explode" : false,
          "in" : "query",
          "name" : "username",
          "required" : false,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          },
          "style" : "form"
        }, {
          "allowReserved" : false,
          "explode" : false,
          "in" : "query",
          "name" : "password",
          "required" : false,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          },
          "style" : "form"
        }, {
          "allowReserved" : false,
          "example" : "ResponseQueueTeam",
          "explode" : false,
          "in" : "query",
          "name" : "jmsQueue",
          "required" : false,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          },
          "style" : "form"
        }, {
          "allowReserved" : false,
          "example" : false,
          "explode" : false,
          "in" : "query",
          "name" : "hasPassed",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        }, {
          "allowReserved" : false,
          "example" : 0,
          "explode" : false,
          "in" : "query",
          "name" : "minRequests",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "minimum" : 0,
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "allowReserved" : false,
          "example" : 9223372036854775807,
          "explode" : false,
          "in" : "query",
          "name" : "maxRequests",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "minimum" : 0,
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "allowReserved" : false,
          "explode" : false,
          "in" : "query",
          "name" : "studentFirstname",
          "required" : false,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          },
          "style" : "form"
        }, {
          "allowReserved" : false,
          "explode" : false,
          "in" : "query",
          "name" : "studentLastname",
          "required" : false,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          },
          "style" : "form"
        }, {
          "allowReserved" : false,
          "example" : [ "Schufa", "Deutsche Bank", "Sparkasse", "PSD Bank", "Raiffeisen", "Volksbank", "Commerzbank" ],
          "explode" : true,
          "in" : "query",
          "name" : "banks",
          "required" : false,
          "schema" : {
            "items" : {
              "maxLength" : 50,
              "minLength" : 6,
              "type" : "string"
            },
            "minItems" : 0,
            "type" : "array",
            "uniqueItems" : true
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Teams"
                }
              }
            },
            "description" : "Teams"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "RequestValidationException",
                    "message" : "uuid must have valid uuid format"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Invalid Request"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "Exception",
                    "message" : "internal server error"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Gets all teams",
        "tags" : [ "Team" ]
      }
    },
    "/teams/{uuid}" : {
      "delete" : {
        "operationId" : "deleteTeamById",
        "parameters" : [ {
          "allowReserved" : false,
          "example" : "9426de16-95b9-4250-b22f-6d1d6d9b8d7e",
          "explode" : false,
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "pattern" : "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "No Content"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "RequestValidationException",
                    "message" : "uuid must have valid uuid format"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Invalid Request"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "Exception",
                    "message" : "internal server error"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deletes a team",
        "tags" : [ "Team" ]
      },
      "get" : {
        "operationId" : "getTeamById",
        "parameters" : [ {
          "allowReserved" : false,
          "example" : "9426de16-95b9-4250-b22f-6d1d6d9b8d7e",
          "explode" : false,
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "pattern" : "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Team"
                }
              }
            },
            "description" : "Team"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "RequestValidationException",
                    "message" : "uuid must have valid uuid format"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Invalid Request"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "NotFoundException",
                    "message" : "resource not found"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Not Found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "Exception",
                    "message" : "internal server error"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Finds team by UUID",
        "tags" : [ "Team" ]
      },
      "put" : {
        "operationId" : "saveTeam",
        "parameters" : [ {
          "allowReserved" : false,
          "example" : "9426de16-95b9-4250-b22f-6d1d6d9b8d7e",
          "explode" : false,
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "pattern" : "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Team"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Team"
                }
              }
            },
            "description" : "Team"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "RequestValidationException",
                    "message" : "uuid must have valid uuid format"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Invalid Request"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "NotFoundException",
                    "message" : "resource not found"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Not Found"
          },
          "409" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "TransactionException",
                    "message" : "could not serialize access due to concurrent update"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Conflict in Database"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "Exception",
                    "message" : "internal server error"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Creates or updates a team",
        "tags" : [ "Team" ]
      }
    },
    "/teams/{uuid}/statistics" : {
      "delete" : {
        "operationId" : "resetStatistics",
        "parameters" : [ {
          "allowReserved" : false,
          "example" : "9426de16-95b9-4250-b22f-6d1d6d9b8d7e",
          "explode" : false,
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "pattern" : "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Team"
                }
              }
            },
            "description" : "Team"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "RequestValidationException",
                    "message" : "uuid must have valid uuid format"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Invalid Request"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "NotFoundException",
                    "message" : "resource not found"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Not Found"
          },
          "409" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "TransactionException",
                    "message" : "could not serialize access due to concurrent update"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Conflict in Database"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "Exception",
                    "message" : "internal server error"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Resets all team statistics to zero",
        "tags" : [ "Team" ]
      }
    },
    "/teams/{uuid}/unique/username/{username}" : {
      "get" : {
        "operationId" : "isUsernameUnique",
        "parameters" : [ {
          "allowReserved" : false,
          "example" : "9426de16-95b9-4250-b22f-6d1d6d9b8d7e",
          "explode" : false,
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "pattern" : "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "allowReserved" : false,
          "example" : "Beispielteam",
          "explode" : false,
          "in" : "path",
          "name" : "username",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "isUnique" : true
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Unique"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "RequestValidationException",
                    "message" : "uuid must have valid uuid format"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Invalid Request"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "Exception",
                    "message" : "internal server error"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Checks uniqueness of a username based on team id",
        "tags" : [ "Team" ]
      }
    },
    "/teams/{uuid}/unique/password/{password}" : {
      "get" : {
        "operationId" : "isPasswordUnique",
        "parameters" : [ {
          "allowReserved" : false,
          "example" : "9426de16-95b9-4250-b22f-6d1d6d9b8d7e",
          "explode" : false,
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "pattern" : "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "allowReserved" : false,
          "example" : "OOfKqWksmA",
          "explode" : false,
          "in" : "path",
          "name" : "password",
          "required" : true,
          "schema" : {
            "format" : "password",
            "maxLength" : 50,
            "minLength" : 8,
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "isUnique" : true
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Unique"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "RequestValidationException",
                    "message" : "uuid must have valid uuid format"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Invalid Request"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "Exception",
                    "message" : "internal server error"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Checks uniqueness of a password based on team id",
        "tags" : [ "Team" ]
      }
    },
    "/teams/{uuid}/unique/jmsQueue/{jmsQueue}" : {
      "get" : {
        "operationId" : "isJmsQueueUnique",
        "parameters" : [ {
          "allowReserved" : false,
          "example" : "9426de16-95b9-4250-b22f-6d1d6d9b8d7e",
          "explode" : false,
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "pattern" : "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "allowReserved" : false,
          "example" : "ResponseQueueBeispielteam",
          "explode" : false,
          "in" : "path",
          "name" : "jmsQueue",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "isUnique" : true
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Unique"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "RequestValidationException",
                    "message" : "uuid must have valid uuid format"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Invalid Request"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "Exception",
                    "message" : "internal server error"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Checks uniqueness of a jmsQueue based on team id",
        "tags" : [ "Team" ]
      }
    },
    "/statistics/increment" : {
      "patch" : {
        "operationId" : "incrementStatistic",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Statistic"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Statistic"
                }
              }
            },
            "description" : "Statistic"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "RequestValidationException",
                    "message" : "uuid must have valid uuid format"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Invalid Request"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "NotFoundException",
                    "message" : "resource not found"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Not Found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "Exception",
                    "message" : "internal server error"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Increments requests count by one without transaction conflicts",
        "tags" : [ "Statistic" ]
      }
    },
    "/banks" : {
      "get" : {
        "operationId" : "getAllBanks",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "Banks" : {
                    "$ref" : "#/components/examples/Banks"
                  }
                },
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/Bank"
                  },
                  "minItems" : 0,
                  "title" : "Banks",
                  "type" : "array",
                  "uniqueItems" : true
                }
              }
            },
            "description" : "Banks"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "Exception",
                    "message" : "internal server error"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Gets all banks",
        "tags" : [ "Bank" ]
      }
    },
    "/banks/{uuid}" : {
      "get" : {
        "operationId" : "getBankById",
        "parameters" : [ {
          "allowReserved" : false,
          "example" : "8ab8fef5-1239-42d5-a199-7cb41f68fc21",
          "explode" : false,
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "Schufa" : {
                    "$ref" : "#/components/examples/Schufa"
                  },
                  "Synchrone Bank" : {
                    "$ref" : "#/components/examples/SyncBank"
                  },
                  "Asynchrone Bank" : {
                    "$ref" : "#/components/examples/AsyncBank"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Bank"
                }
              }
            },
            "description" : "Bank"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "NotFoundException",
                    "message" : "resource not found"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Not Found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "Exception",
                    "message" : "internal server error"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Finds bank by UUID",
        "tags" : [ "Bank" ]
      },
      "patch" : {
        "operationId" : "patchBank",
        "parameters" : [ {
          "allowReserved" : false,
          "example" : "8ab8fef5-1239-42d5-a199-7cb41f68fc21",
          "explode" : false,
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Bank"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "Schufa" : {
                    "$ref" : "#/components/examples/Schufa"
                  },
                  "Synchrone Bank" : {
                    "$ref" : "#/components/examples/SyncBank"
                  },
                  "Asynchrone Bank" : {
                    "$ref" : "#/components/examples/AsyncBank"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Bank"
                }
              }
            },
            "description" : "Bank"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "RequestValidationException",
                    "message" : "uuid must have valid uuid format"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Invalid Request"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "NotFoundException",
                    "message" : "resource not found"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Not Found"
          },
          "409" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "TransactionException",
                    "message" : "could not serialize access due to concurrent update"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Conflict in Database"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "Exception",
                    "message" : "internal server error"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Updates particular fields of a bank",
        "tags" : [ "Bank" ]
      }
    },
    "/tasks" : {
      "get" : {
        "operationId" : "getAllTask",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/Task"
                  },
                  "minItems" : 0,
                  "title" : "Tasks",
                  "type" : "array",
                  "uniqueItems" : true
                }
              }
            },
            "description" : "Tasks"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "Exception",
                    "message" : "internal server error"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Gets all tasks",
        "tags" : [ "Task" ]
      }
    },
    "/tasks/{uuid}" : {
      "get" : {
        "operationId" : "getTaskById",
        "parameters" : [ {
          "allowReserved" : false,
          "example" : "4ff1f9cb-e65d-4c8f-908a-d036700b757e",
          "explode" : false,
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "pattern" : "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Task"
                }
              }
            },
            "description" : "Task"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "RequestValidationException",
                    "message" : "uuid must have valid uuid format"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Invalid Request"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "NotFoundException",
                    "message" : "resource not found"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Not Found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "Exception",
                    "message" : "internal server error"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Gets task by UUID",
        "tags" : [ "Task" ]
      },
      "patch" : {
        "operationId" : "patchTask",
        "parameters" : [ {
          "allowReserved" : false,
          "example" : "4ff1f9cb-e65d-4c8f-908a-d036700b757e",
          "explode" : false,
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "pattern" : "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Task"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Task"
                }
              }
            },
            "description" : "Task"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "RequestValidationException",
                    "message" : "uuid must have valid uuid format"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Invalid Request"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "NotFoundException",
                    "message" : "resource not found"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Not Found"
          },
          "409" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "TransactionException",
                    "message" : "could not serialize access due to concurrent update"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Conflict in Database"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "Exception",
                    "message" : "internal server error"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Updates particular fields of a task",
        "tags" : [ "Task" ]
      }
    },
    "/tasks/{uuid}/unique/title/{title}" : {
      "get" : {
        "operationId" : "isTitleUnique",
        "parameters" : [ {
          "allowReserved" : false,
          "example" : "4ff1f9cb-e65d-4c8f-908a-d036700b757e",
          "explode" : false,
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "pattern" : "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "allowReserved" : false,
          "example" : "Asynchrone Banken",
          "explode" : false,
          "in" : "path",
          "name" : "title",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Task"
                }
              }
            },
            "description" : "Task"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "RequestValidationException",
                    "message" : "uuid must have valid uuid format"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Invalid Request"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "Exception",
                    "message" : "internal server error"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Checks uniqueness of a title based on task id",
        "tags" : [ "Task" ]
      }
    },
    "/activemq" : {
      "delete" : {
        "operationId" : "resetBroker",
        "responses" : {
          "204" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "No Content"
          },
          "409" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "TransactionException",
                    "message" : "could not serialize access due to concurrent update"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Conflict in Database"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "Exception",
                    "message" : "internal server error"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Resets broker and all team passwords",
        "tags" : [ "Broker" ]
      }
    },
    "/activemq/{name}" : {
      "delete" : {
        "operationId" : "deleteQueueByName",
        "parameters" : [ {
          "allowReserved" : false,
          "example" : "ResponseQueueBeispielteam",
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "No Content"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "reasons" : [ {
                    "exception" : "Exception",
                    "message" : "internal server error"
                  } ],
                  "dateTime" : "2022-01-31T07:43:30"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Errors"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deletes a queue",
        "tags" : [ "Broker" ]
      }
    }
  },
  "components" : {
    "examples" : {
      "Banks" : {
        "value" : [ {
          "uuid" : "8ab8fef5-1239-42d5-a199-7cb41f68fc21",
          "name" : "Schufa",
          "jmsQueue" : "schufa",
          "thumbnailUrl" : "https://www.kskgg.de/content/myif/ksk-gross-gerau/work/filiale/de/home/service/schufa-bonitaetscheck/_jcr_content/par/section/section/imagebox1/image.img.jpg/1597729904274.jpg",
          "isAsync" : false,
          "isActive" : true,
          "creditConfiguration" : null
        }, {
          "uuid" : "bf6981d4-0413-4767-8232-c7179b169bc7",
          "name" : "Deutsche Bank",
          "jmsQueue" : "deutschebank",
          "thumbnailUrl" : "https://upload.wikimedia.org/wikipedia/commons/thumb/7/7b/Deutsche_Bank_logo_without_wordmark.svg/2048px-Deutsche_Bank_logo_without_wordmark.svg.png",
          "isAsync" : false,
          "isActive" : true,
          "creditConfiguration" : {
            "minAmountInEuros" : 10000,
            "maxAmountInEuros" : 50000,
            "minTermInMonths" : 6,
            "maxTermInMonths" : 36,
            "minSchufaRating" : "A",
            "maxSchufaRating" : "P"
          }
        }, {
          "uuid" : "78eefcd4-2459-412e-857f-60f7c5d531c9",
          "name" : "Sparkasse",
          "jmsQueue" : "sparkasse",
          "thumbnailUrl" : "https://upload.wikimedia.org/wikipedia/commons/thumb/8/83/Sparkasse.svg/2000px-Sparkasse.svg.png",
          "isAsync" : true,
          "isActive" : true,
          "creditConfiguration" : {
            "minAmountInEuros" : 10000,
            "maxAmountInEuros" : 50000,
            "minTermInMonths" : 6,
            "maxTermInMonths" : 36,
            "minSchufaRating" : "A",
            "maxSchufaRating" : "P"
          }
        } ]
      },
      "Schufa" : {
        "value" : {
          "uuid" : "8ab8fef5-1239-42d5-a199-7cb41f68fc21",
          "name" : "Schufa",
          "jmsQueue" : "schufa",
          "thumbnailUrl" : "https://www.kskgg.de/content/myif/ksk-gross-gerau/work/filiale/de/home/service/schufa-bonitaetscheck/_jcr_content/par/section/section/imagebox1/image.img.jpg/1597729904274.jpg",
          "isAsync" : false,
          "isActive" : true,
          "creditConfiguration" : null
        }
      },
      "SyncBank" : {
        "value" : {
          "uuid" : "bf6981d4-0413-4767-8232-c7179b169bc7",
          "name" : "Deutsche Bank",
          "jmsQueue" : "deutschebank",
          "thumbnailUrl" : "https://upload.wikimedia.org/wikipedia/commons/thumb/7/7b/Deutsche_Bank_logo_without_wordmark.svg/2048px-Deutsche_Bank_logo_without_wordmark.svg.png",
          "isAsync" : false,
          "isActive" : true,
          "creditConfiguration" : {
            "minAmountInEuros" : 10000,
            "maxAmountInEuros" : 50000,
            "minTermInMonths" : 6,
            "maxTermInMonths" : 36,
            "minSchufaRating" : "A",
            "maxSchufaRating" : "P"
          }
        }
      },
      "AsyncBank" : {
        "value" : {
          "uuid" : "78eefcd4-2459-412e-857f-60f7c5d531c9",
          "name" : "Sparkasse",
          "jmsQueue" : "sparkasse",
          "thumbnailUrl" : "https://upload.wikimedia.org/wikipedia/commons/thumb/8/83/Sparkasse.svg/2000px-Sparkasse.svg.png",
          "isAsync" : true,
          "isActive" : true,
          "creditConfiguration" : {
            "minAmountInEuros" : 10000,
            "maxAmountInEuros" : 50000,
            "minTermInMonths" : 6,
            "maxTermInMonths" : 36,
            "minSchufaRating" : "A",
            "maxSchufaRating" : "P"
          }
        }
      }
    },
    "requestBodies" : {
      "Team" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Team"
            }
          }
        },
        "required" : true
      },
      "Statistic" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Statistic"
            }
          }
        },
        "required" : true
      },
      "Bank" : {
        "content" : {
          "application/json" : {
            "examples" : {
              "Schufa" : {
                "$ref" : "#/components/examples/Schufa"
              },
              "Synchrone Bank" : {
                "$ref" : "#/components/examples/SyncBank"
              },
              "Asynchrone Bank" : {
                "$ref" : "#/components/examples/AsyncBank"
              }
            },
            "schema" : {
              "$ref" : "#/components/schemas/Bank"
            }
          }
        },
        "required" : true
      },
      "Task" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Task"
            }
          }
        },
        "required" : true
      }
    },
    "responses" : {
      "200s" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "items" : {
                "$ref" : "#/components/schemas/Task"
              },
              "minItems" : 0,
              "title" : "Tasks",
              "type" : "array",
              "uniqueItems" : true
            }
          }
        },
        "description" : "Tasks"
      },
      "400" : {
        "content" : {
          "application/json" : {
            "example" : {
              "reasons" : [ {
                "exception" : "RequestValidationException",
                "message" : "uuid must have valid uuid format"
              } ],
              "dateTime" : "2022-01-31T07:43:30"
            },
            "schema" : {
              "$ref" : "#/components/schemas/Errors"
            }
          }
        },
        "description" : "Invalid Request"
      },
      "500" : {
        "content" : {
          "application/json" : {
            "example" : {
              "reasons" : [ {
                "exception" : "Exception",
                "message" : "internal server error"
              } ],
              "dateTime" : "2022-01-31T07:43:30"
            },
            "schema" : {
              "$ref" : "#/components/schemas/Errors"
            }
          }
        },
        "description" : "Internal Server Error"
      },
      "200" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Task"
            }
          }
        },
        "description" : "Task"
      },
      "404" : {
        "content" : {
          "application/json" : {
            "example" : {
              "reasons" : [ {
                "exception" : "NotFoundException",
                "message" : "resource not found"
              } ],
              "dateTime" : "2022-01-31T07:43:30"
            },
            "schema" : {
              "$ref" : "#/components/schemas/Errors"
            }
          }
        },
        "description" : "Not Found"
      },
      "409" : {
        "content" : {
          "application/json" : {
            "example" : {
              "reasons" : [ {
                "exception" : "TransactionException",
                "message" : "could not serialize access due to concurrent update"
              } ],
              "dateTime" : "2022-01-31T07:43:30"
            },
            "schema" : {
              "$ref" : "#/components/schemas/Errors"
            }
          }
        },
        "description" : "Conflict in Database"
      },
      "204" : {
        "content" : {
          "text/plain" : { }
        },
        "description" : "No Content"
      }
    },
    "schemas" : {
      "Teams" : {
        "example" : {
          "pagination" : {
            "first" : "eyJwb3NpdGlvbiI6IiIsImRpcmVjdGlvbiI6IkFTQ0VORElORyIsInF1ZXJ5SGFzaCI6LTc4OTY0NDQwNiwicXVlcnkiOnsibGltaXQiOjEwLCJ0eXBlIjpudWxsLCJ1c2VybmFtZSI6bnVsbCwicGFzc3dvcmQiOm51bGwsImptc1F1ZXVlIjpudWxsLCJoYXNQYXNzZWQiOm51bGwsIm1pblJlcXVlc3RzIjpudWxsLCJtYXhSZXF1ZXN0cyI6bnVsbCwic3R1ZGVudEZpcnN0bmFtZSI6bnVsbCwic3R1ZGVudExhc3RuYW1lIjpudWxsLCJiYW5rcyI6bnVsbH19",
            "prev" : "eyJwb3NpdGlvbiI6IlRlYW0wMDAwMTAiLCJkaXJlY3Rpb24iOiJERVNDRU5ESU5HIiwicXVlcnlIYXNoIjotNzg5NjQ0NDA2LCJxdWVyeSI6eyJsaW1pdCI6MTAsInR5cGUiOm51bGwsInVzZXJuYW1lIjpudWxsLCJwYXNzd29yZCI6bnVsbCwiam1zUXVldWUiOm51bGwsImhhc1Bhc3NlZCI6bnVsbCwibWluUmVxdWVzdHMiOm51bGwsIm1heFJlcXVlc3RzIjpudWxsLCJzdHVkZW50Rmlyc3RuYW1lIjpudWxsLCJzdHVkZW50TGFzdG5hbWUiOm51bGwsImJhbmtzIjpudWxsfX0=",
            "next" : "eyJwb3NpdGlvbiI6IlRlYW0wMDAwMDkiLCJkaXJlY3Rpb24iOiJBU0NFTkRJTkciLCJxdWVyeUhhc2giOi03ODk2NDQ0MDYsInF1ZXJ5Ijp7ImxpbWl0IjoxMCwidHlwZSI6bnVsbCwidXNlcm5hbWUiOm51bGwsInBhc3N3b3JkIjpudWxsLCJqbXNRdWV1ZSI6bnVsbCwiaGFzUGFzc2VkIjpudWxsLCJtaW5SZXF1ZXN0cyI6bnVsbCwibWF4UmVxdWVzdHMiOm51bGwsInN0dWRlbnRGaXJzdG5hbWUiOm51bGwsInN0dWRlbnRMYXN0bmFtZSI6bnVsbCwiYmFua3MiOm51bGx9fQ==",
            "last" : "eyJwb3NpdGlvbiI6IiIsImRpcmVjdGlvbiI6IkRFU0NFTkRJTkciLCJxdWVyeUhhc2giOi03ODk2NDQ0MDYsInF1ZXJ5Ijp7ImxpbWl0IjoxMCwidHlwZSI6bnVsbCwidXNlcm5hbWUiOm51bGwsInBhc3N3b3JkIjpudWxsLCJqbXNRdWV1ZSI6bnVsbCwiaGFzUGFzc2VkIjpudWxsLCJtaW5SZXF1ZXN0cyI6bnVsbCwibWF4UmVxdWVzdHMiOm51bGwsInN0dWRlbnRGaXJzdG5hbWUiOm51bGwsInN0dWRlbnRMYXN0bmFtZSI6bnVsbCwiYmFua3MiOm51bGx9fQ=="
          },
          "query" : {
            "type" : "REGULAR",
            "username" : "Beispielteam",
            "password" : "OOfKqWksmA",
            "jmsQueue" : "ResponseQueueBeispielteam",
            "hasPassed" : false,
            "minRequests" : 0,
            "maxRequests" : 9223372036854775807,
            "studentFirstname" : "Max",
            "studentLastname" : "Mustermann",
            "banks" : [ "Schufa", "Deutsche Bank", "Sparkasse", "PSD Bank", "Raiffeisen", "Volksbank", "Commerzbank" ]
          },
          "items" : [ {
            "uuid" : "9426de16-95b9-4250-b22f-6d1d6d9b8d7e",
            "type" : "EXAMPLE",
            "username" : "Beispielteam",
            "password" : "OOfKqWksmA",
            "jmsQueue" : "ResponseQueueBeispielteam",
            "students" : [ {
              "uuid" : "31b1631b-66c9-4720-94fc-95891a38f964",
              "firstname" : "Max",
              "lastname" : "Mustermann"
            }, {
              "uuid" : "474e90cb-de6e-47f2-844a-44ea7dc09516",
              "firstname" : "Angela",
              "lastname" : "Merkel"
            }, {
              "uuid" : "f334a0c0-0c26-4499-aa95-061546839a75",
              "firstname" : "Thomas",
              "lastname" : "Müller"
            } ],
            "statistics" : {
              "Schufa" : 0,
              "Deutsche Bank" : 0,
              "Sparkasse" : 0,
              "PSD Bank" : 0,
              "Raiffeisen" : 0,
              "Volksbank" : 0,
              "Commerzbank" : 0
            },
            "hasPassed" : false
          } ]
        },
        "properties" : {
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          },
          "query" : {
            "$ref" : "#/components/schemas/Query"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/Team"
            },
            "minItems" : 0,
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "required" : [ "items", "pagination", "query" ],
        "type" : "object"
      },
      "Query" : {
        "properties" : {
          "limit" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer"
          },
          "type" : {
            "format" : "enum",
            "type" : "string"
          },
          "username" : {
            "default" : "",
            "minLength" : 0,
            "type" : "string"
          },
          "password" : {
            "maxLength" : 50,
            "minLength" : 10,
            "type" : "string"
          },
          "jmsQueue" : {
            "default" : "",
            "minLength" : 0,
            "type" : "string"
          },
          "hasPassed" : {
            "type" : "boolean"
          },
          "minRequests" : {
            "format" : "int64",
            "minimum" : 0,
            "type" : "integer"
          },
          "maxRequests" : {
            "format" : "int64",
            "minimum" : 0,
            "type" : "integer"
          },
          "studentFirstname" : {
            "minLength" : 0,
            "type" : "string"
          },
          "studentLastname" : {
            "minLength" : 0,
            "type" : "string"
          },
          "banks" : {
            "items" : {
              "maxLength" : 50,
              "minLength" : 6,
              "type" : "string"
            },
            "minItems" : 0,
            "type" : "array"
          }
        },
        "required" : [ "limit" ],
        "type" : "object"
      },
      "Team" : {
        "example" : {
          "uuid" : "9426de16-95b9-4250-b22f-6d1d6d9b8d7e",
          "type" : "EXAMPLE",
          "username" : "Beispielteam",
          "password" : "OOfKqWksmA",
          "jmsQueue" : "ResponseQueueBeispielteam",
          "students" : [ {
            "uuid" : "31b1631b-66c9-4720-94fc-95891a38f964",
            "firstname" : "Max",
            "lastname" : "Mustermann"
          }, {
            "uuid" : "474e90cb-de6e-47f2-844a-44ea7dc09516",
            "firstname" : "Angela",
            "lastname" : "Merkel"
          }, {
            "uuid" : "f334a0c0-0c26-4499-aa95-061546839a75",
            "firstname" : "Thomas",
            "lastname" : "Müller"
          } ],
          "statistics" : {
            "Schufa" : 0,
            "Deutsche Bank" : 0,
            "Sparkasse" : 0,
            "PSD Bank" : 0,
            "Raiffeisen" : 0,
            "Volksbank" : 0,
            "Commerzbank" : 0
          },
          "hasPassed" : false
        },
        "properties" : {
          "uuid" : {
            "format" : "uuid",
            "pattern" : "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type" : "string"
          },
          "type" : {
            "format" : "enum",
            "type" : "string"
          },
          "username" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          },
          "password" : {
            "format" : "password",
            "maxLength" : 50,
            "minLength" : 10,
            "type" : "string"
          },
          "jmsQueue" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          },
          "students" : {
            "items" : {
              "$ref" : "#/components/schemas/Student"
            },
            "minItems" : 0,
            "title" : "Students",
            "type" : "array",
            "uniqueItems" : true
          },
          "statistics" : {
            "additionalProperties" : {
              "format" : "int64",
              "minimum" : 0,
              "type" : "integer"
            },
            "type" : "object"
          },
          "hasPassed" : {
            "type" : "boolean"
          }
        },
        "required" : [ "hasPassed", "jmsQueue", "password", "statistics", "students", "type", "username", "uuid" ],
        "type" : "object"
      },
      "Student" : {
        "properties" : {
          "uuid" : {
            "format" : "uuid",
            "pattern" : "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type" : "string"
          },
          "firstname" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          },
          "lastname" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          }
        },
        "required" : [ "firstname", "lastname", "uuid" ],
        "type" : "object"
      },
      "Errors" : {
        "properties" : {
          "reasons" : {
            "items" : {
              "$ref" : "#/components/schemas/Reason"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          },
          "dateTime" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "required" : [ "dateTime", "reasons" ],
        "type" : "object"
      },
      "Reason" : {
        "properties" : {
          "exception" : {
            "minLength" : 1,
            "type" : "string"
          },
          "message" : {
            "minLength" : 1,
            "type" : "string"
          }
        },
        "required" : [ "exception", "message" ]
      },
      "Unique" : {
        "properties" : {
          "isUnique" : {
            "type" : "boolean"
          }
        },
        "required" : [ "isUnique" ],
        "type" : "object"
      },
      "Statistic" : {
        "example" : {
          "bankId" : "78eefcd4-2459-412e-857f-60f7c5d531c9",
          "teamId" : "9426de16-95b9-4250-b22f-6d1d6d9b8d7e",
          "requestsCount" : 0
        },
        "properties" : {
          "bankId" : {
            "format" : "uuid",
            "pattern" : "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type" : "string"
          },
          "teamId" : {
            "format" : "uuid",
            "pattern" : "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type" : "string"
          },
          "requestsCount" : {
            "format" : "int64",
            "minimum" : 0,
            "type" : "integer"
          }
        },
        "required" : [ "bankId", "teamId" ],
        "type" : "object"
      },
      "Bank" : {
        "properties" : {
          "uuid" : {
            "format" : "uuid",
            "pattern" : "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type" : "string"
          },
          "name" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          },
          "jmsQueue" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          },
          "thumbnailUrl" : {
            "format" : "url",
            "pattern" : "^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]",
            "type" : "string"
          },
          "isAsync" : {
            "type" : "boolean"
          },
          "isActive" : {
            "type" : "boolean"
          },
          "creditConfiguration" : {
            "$ref" : "#/components/schemas/CreditConfiguration"
          }
        },
        "required" : [ "isActive", "isAsync", "jmsQueue", "name", "thumbnailUrl", "uuid" ],
        "type" : "object"
      },
      "CreditConfiguration" : {
        "properties" : {
          "minAmountInEuros" : {
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          },
          "maxAmountInEuros" : {
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          },
          "minTermInMonths" : {
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          },
          "maxTermInMonths" : {
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          },
          "minSchufaRating" : {
            "format" : "enum",
            "maxLength" : 1,
            "minLength" : 1,
            "type" : "string"
          },
          "maxSchufaRating" : {
            "format" : "enum",
            "maxLength" : 1,
            "minLength" : 1,
            "type" : "string"
          }
        },
        "required" : [ "maxAmountInEuros", "maxSchufaRating", "maxTermInMonths", "minAmountInEuros", "minSchufaRating", "minTermInMonths" ],
        "type" : "object"
      },
      "Task" : {
        "example" : {
          "uuid" : "4ff1f9cb-e65d-4c8f-908a-d036700b757e",
          "title" : "Asynchrone Banken",
          "description" : "<p>Es existieren eine Reihe bereits vorgegebener asynchroner Banken, welche per JMS erreichbar sind. Um die Banken zu erreichen, müssen Sie im VPN der Hochschule sein und den Port in der URL mit angeben. Sie kommunizieren nicht direkt mit den Banken, sondern mit einem ActiveMQ-Broker als Middleware. Die Messages an den Broker sind Textnachrichten, die als JSON strukturiert sind. Die Message entspricht also einem JSON-Objekt mit den Parametern als einzelne Key-Value-Pairs (siehe unten). Ein Error-Handling wie in den synchronen Services gibt es nicht. Sie übernehmen daher die Anfragegrenzen aus der internen Konfiguration der Banken. Die Rückgabewert der Banken enthält neben einem Zinsatz für den gewünschten Kredit zwischen 0 und 10% vom Datentyp Double die Request ID der Anfrage. Eine Bank hört auf einer Queue des Broker nach Nachrichten für diese Bank (Bei der Sparkasse z.B. „sparkasse“). Sie entnehmen die Antworten der Banken auf ihrer Team-Queue, z.B. ResponseQueueTeam01.</p><p>Beispiel Textnachricht Request: {\\\"requestId\\\": \\\"123\\\",\\\"amountInEuros\\\": 20000,\\\"termInMonths\\\": 12,\\\"ratingLevel\\\": \\\"B\\\",\\\"delayInMilliseconds\\\": 0,\\\"username\\\": \\\"Team01\\\",\\\"password\\\": \\\"123456\\\"}</p><p>Beispiel Textnachricht Response: {\\\"requestId\\\":\\\"123\\\",\\\"lendingRate\\\":2.738343644690228}</p>",
          "integrationStep" : "3",
          "isOpenApiVerbose" : false,
          "contact" : {
            "uuid" : "ba16bd92-9e64-4de6-916f-d0c4ea91a530",
            "firstname" : "Jan-Hendrik",
            "lastname" : "Hausner",
            "email" : "jan-hendrik.hausner@outlook.com"
          },
          "endpoints" : [ {
            "uuid" : "35540453-ea3d-4f87-a19f-486c29e68b4f",
            "type" : "JMS",
            "url" : "tcp://bambusinessintegration.wi.hs-furtwangen.de:61616",
            "docsUrl" : ""
          } ],
          "parameters" : [ {
            "uuid" : "0ae3aa19-e421-4c5f-bb9a-d9f932689e5f",
            "name" : "requestId",
            "type" : "STRING",
            "description" : "Zufällige Request-ID",
            "example" : "42455280-4a1b-43d7-97a8-cc0beaaa0829"
          } ],
          "responses" : [ {
            "uuid" : "45d2b3fd-f87f-4dde-a8cd-36c02612cd50",
            "httpStatusCode" : -1,
            "contentType" : "application/json",
            "description" : "Kreditzins in Prozent",
            "example" : "{ \"requestId\": \"123\", \"lendingRateInPercent\": 2.738343644690228 }"
          } ],
          "banks" : [ {
            "uuid" : "78eefcd4-2459-412e-857f-60f7c5d531c9",
            "jmsQueue" : "sparkasse",
            "name" : "Sparkasse",
            "thumbnailUrl" : "https://upload.wikimedia.org/wikipedia/commons/thumb/8/83/Sparkasse.svg/2000px-Sparkasse.svg.png",
            "isAsync" : true,
            "isActive" : true,
            "creditConfiguration" : {
              "minAmountInEuros" : 10000,
              "maxAmountInEuros" : 50000,
              "minTermInMonths" : 6,
              "maxTermInMonths" : 36,
              "minSchufaRating" : "A",
              "maxSchufaRating" : "P"
            }
          } ]
        },
        "properties" : {
          "uuid" : {
            "format" : "uuid",
            "pattern" : "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type" : "string"
          },
          "title" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          },
          "description" : {
            "maxLength" : 2000,
            "minLength" : 0,
            "type" : "string"
          },
          "integrationStep" : {
            "format" : "int32",
            "maximum" : 3,
            "minimum" : 1,
            "type" : "integer"
          },
          "isOpenApiVerbose" : {
            "type" : "boolean"
          },
          "contact" : {
            "$ref" : "#/components/schemas/Contact"
          },
          "endpoints" : {
            "items" : {
              "$ref" : "#/components/schemas/Endpoint"
            },
            "minItems" : 0,
            "title" : "Endpoints",
            "type" : "array",
            "uniqueItems" : true
          },
          "parameters" : {
            "items" : {
              "$ref" : "#/components/schemas/Parameter"
            },
            "minItems" : 0,
            "title" : "Parameters",
            "type" : "array",
            "uniqueItems" : true
          },
          "responses" : {
            "items" : {
              "$ref" : "#/components/schemas/Response"
            },
            "minItems" : 0,
            "title" : "Responses",
            "type" : "array",
            "uniqueItems" : true
          },
          "banks" : {
            "items" : {
              "$ref" : "#/components/schemas/Bank"
            },
            "minItems" : 0,
            "title" : "Banks",
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "required" : [ "banks", "contact", "description", "endpoints", "integrationStep", "isOpenApiVerbose", "parameters", "responses", "title", "uuid" ],
        "type" : "object"
      },
      "Contact" : {
        "properties" : {
          "uuid" : {
            "format" : "uuid",
            "pattern" : "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type" : "string"
          },
          "firstname" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          },
          "lastname" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          },
          "email" : {
            "format" : "email",
            "pattern" : "^[A-Za-z0-9._+%-]+@[A-Za-z0-9.-]+[.][A-Za-z]+$",
            "type" : "string"
          }
        },
        "required" : [ "email", "firstname", "lastname", "uuid" ],
        "type" : "object"
      },
      "Endpoint" : {
        "properties" : {
          "uuid" : {
            "format" : "uuid",
            "pattern" : "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type" : "string"
          },
          "type" : {
            "format" : "enum",
            "type" : "string"
          },
          "url" : {
            "format" : "url",
            "pattern" : "(^$|^(https?|ftp|file|tcp)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|])",
            "type" : "string"
          },
          "docsUrl" : {
            "format" : "url",
            "pattern" : "(^$|^(https?|ftp|file|tcp)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|])",
            "type" : "string"
          }
        },
        "required" : [ "docsUrl", "type", "url", "uuid" ],
        "type" : "object"
      },
      "Parameter" : {
        "properties" : {
          "uuid" : {
            "format" : "uuid",
            "pattern" : "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type" : "string"
          },
          "name" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          },
          "type" : {
            "format" : "enum",
            "type" : "string"
          },
          "description" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "example" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string"
          }
        },
        "required" : [ "description", "example", "name", "type", "uuid" ],
        "type" : "object"
      },
      "Response" : {
        "properties" : {
          "uuid" : {
            "format" : "uuid",
            "pattern" : "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type" : "string"
          },
          "httpStatusCode" : {
            "format" : "http-status",
            "maximum" : 507,
            "minimum" : -1,
            "type" : "integer"
          },
          "contentType" : {
            "format" : "content-type",
            "minLength" : 1,
            "type" : "string"
          },
          "description" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "example" : {
            "minLength" : 1,
            "type" : "string"
          }
        },
        "required" : [ "contentType", "description", "example", "httpStatusCode", "uuid" ],
        "type" : "object"
      },
      "Pagination" : {
        "properties" : {
          "first" : {
            "format" : "byte",
            "minLength" : 3,
            "type" : "string"
          },
          "prev" : {
            "format" : "byte",
            "minLength" : 3,
            "type" : "string"
          },
          "next" : {
            "format" : "byte",
            "minLength" : 3,
            "type" : "string"
          },
          "last" : {
            "format" : "byte",
            "minLength" : 3,
            "type" : "string"
          }
        },
        "required" : [ "first", "last" ],
        "type" : "object"
      }
    }
  }
}