ktor {
    deployment {
        port = 8080
        port = ${?KTOR_DEPLOYMENT_PORT}
    }
    application {
        modules = [ de.hennihaus.ApplicationKt.module ]
        timezone = Europe/Berlin
        timezone = ${?KTOR_APPLICATION_TIMEZONE}
        apiVersion = v1
        apiVersion = ${?KTOR_APPLICATION_API_VERSION}
    }
    cors {
        frontend {
            allowedProtocol = http
            allowedProtocol = ${?KTOR_CORS_FRONTEND_ALLOWED_PROTOCOL}
            allowedHost = "localhost:4200"
            allowedHost = ${?KTOR_CORS_FRONTEND_ALLOWED_HOST}
        }
        swagger {
            allowedProtocol = http
            allowedProtocol = ${?KTOR_CORS_SWAGGER_ALLOWED_PROTOCOL}
            allowedHost = "localhost:63342"
            allowedHost = ${?KTOR_CORS_SWAGGER_ALLOWED_HOST}
        }
    }
}

common {
    passwordLength = 10
    passwordLength = ${?COMMON_PASSWORD_LENGTH}
}

exposed {
    protocol = "jdbc:postgresql"
    protocol = ${?EXPOSED_PROTOCOL}
    host = localhost
    host = ${?EXPOSED_HOST}
    port= 5432
    port = ${?EXPOSED_PORT}
    database = bambusinessintegration
    database = ${?EXPOSED_DATABASE}
    user = bamconfigbackend_user
    user = ${?EXPOSED_USER}
    password = dn6WC8NTtM3WmCXA
    password = ${?EXPOSED_PASSWORD}
    driver = org.postgresql.Driver
    driver = ${?EXPOSED_DRIVER}
    timeoutInMilliseconds = 10000
    timeoutInMilliseconds = ${?EXPOSED_TIMEOUT_IN_MILLISECONDS}
    timeoutWarningInMilliseconds = 7500
    timeoutWarningInMilliseconds = ${?EXPOSED_TIMEOUT_WARNING_IN_MILLISECONDS}
    aes256BitSalt = 3272357538782F413F4428472B4B6150645367566B5970337336763979244226
    aes256BitSalt = ${?EXPOSED_AES_256_BIT_SALT}
    aesPassword = dn6WC8NTtM3WmCXA
    aesPassword = ${?EXPOSED_AES_PASSWORD}
    defaultFetchSize = 2147483647
    defaultFetchSize = ${?EXPOSED_DEFAULT_FETCH_SIZE}
    defaultRepetitionAttempts = 3
    defaultRepetitionAttempts = ${?EXPOSED_DEFAULT_REPETITION_ATTEMPTS}
    defaultIsolationLevel = TRANSACTION_REPEATABLE_READ
    defaultIsolationLevel = ${?EXPOSED_DEFAULT_ISOLATION_LEVEL}
}

activemq {
    protocol = http
    protocol = ${?ACTIVE_MQ_PROTOCOL}
    host = localhost
    host = ${?ACTIVE_MQ_HOST}
    port = 8161
    port = ${?ACTIVE_MQ_PORT}
    retries = 5
    retries = ${?ACTIVE_MQ_RETRIES}
    headers {
        authorization = Basic dGVzdDp0ZXN0
        authorization = ${?ACTIVE_MQ_HEADERS_AUTHORIZATION}
        origin = "http://localhost"
        origin = ${?ACTIVE_MQ_HEADERS_ORIGIN}
    }
}

github {
    protocol = https
    protocol = ${?GITHUB_PROTOCOL}
    host = api.github.com
    host = ${?GITHUB_HOST}
    retries = 5
    retries = ${?GITHUB_RETRIES}
    token = ${?GITHUB_TOKEN}
    headers {
       apiVersion = "application/vnd.github.v3+json"
       apiVersion = ${?GITHUB_HEADERS_API_VERSION}
    }
    openapi {
        owner = hennihaus
        owner = ${?GITHUB_OPENAPI_OWNER}
        branch = dev
        branch = ${?GITHUB_OPENAPI_BRANCH}
        title = BAM Business Integration
        title = ${?GITHUB_OPENAPI_TITLE}
        commitMessage = Updated swagger config #patch
        commitMessage = ${?GITHUB_OPENAPI_COMMIT_MESSAGE}
        repos = [ bamschufarest, bambankrest ]
        repos = ${?GITHUB_OPENAPI_REPOS}
        paths = [ docs/rating.json, docs/credit.json ]
        paths = ${?GITHUB_OPENAPI_PATHS}
        committer {
            name = hennihaus
            name = ${?GITHUB_OPENAPI_COMMITTER_NAME}
            email = "jan-hendrik.hausner@outlook.com"
            email = ${?GITHUB_OPENAPI_COMMITTER_EMAIL}
        }
    }
}