{
  "openapi": "3.0.3",
  "info": {
    "title": "BAM Business Integration - Bank API",
    "contact": {
      "name": "Jan-Hendrik Hausner",
      "email": "jan-hendrik.hausner@outlook.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://github.com/hennihaus/bamconfigbackend/blob/master/LICENSE"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080/v1",
      "description": "Base-URL"
    }
  ],
  "tags": [
    {
      "name": "Bank"
    }
  ],
  "paths": {
    "/banks": {
      "get": {
        "tags": [
          "Bank"
        ],
        "operationId": "getAllBanks",
        "summary": "Gets all banks",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200s"
          },
          "500": {
            "$ref": "../commons/commons.json#/components/responses/500"
          }
        }
      },
      "put": {
        "tags": [
          "Bank"
        ],
        "operationId": "saveAllBanks",
        "summary": "Overwrites all banks",
        "requestBody": {
          "$ref": "#/components/requestBodies/Banks"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200s"
          },
          "400": {
            "$ref": "../commons/commons.json#/components/responses/400"
          },
          "404": {
            "$ref": "../commons/commons.json#/components/responses/404"
          },
          "500": {
            "$ref": "../commons/commons.json#/components/responses/500"
          }
        }
      }
    },
    "/banks/{jmsQueue}": {
      "get": {
        "tags": [
          "Bank"
        ],
        "operationId": "getBankByJmsQueue",
        "summary": "Finds bank by jmsQueue",
        "parameters": [
          {
            "$ref": "#/components/parameters/jmsQueue"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "404": {
            "$ref": "../commons/commons.json#/components/responses/404"
          },
          "500": {
            "$ref": "../commons/commons.json#/components/responses/500"
          }
        }
      },
      "put": {
        "tags": [
          "Bank"
        ],
        "operationId": "saveBank",
        "summary": "Creates or updates a bank",
        "parameters": [
          {
            "$ref": "#/components/parameters/jmsQueue"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Bank"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "400": {
            "$ref": "../commons/commons.json#/components/responses/400"
          },
          "404": {
            "$ref": "../commons/commons.json#/components/responses/404"
          },
          "500": {
            "$ref": "../commons/commons.json#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "jmsQueue": {
        "name": "jmsQueue",
        "in": "path",
        "required": true,
        "example": "schufa",
        "schema": {
          "type": "string",
          "minLength": 6,
          "maxLength": 50
        }
      }
    },
    "requestBodies": {
      "Bank": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../schemas/bank.json#/components/schemas/Bank"
            },
            "examples": {
              "Schufa": {
                "$ref": "../schemas/bank.json#/components/examples/Schufa"
              },
              "Synchrone Bank": {
                "$ref": "../schemas/bank.json#/components/examples/SyncBank"
              },
              "Asynchrone Bank": {
                "$ref": "../schemas/bank.json#/components/examples/AsyncBank"
              }
            }
          }
        }
      },
      "Banks": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "title": "Banks",
              "items": {
                "$ref": "../schemas/bank.json#/components/schemas/Bank"
              },
              "minItems": 0,
              "uniqueItems": true
            },
            "examples": {
              "Banks": {
                "$ref": "../schemas/bank.json#/components/examples/Banks"
              }
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Bank",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../schemas/bank.json#/components/schemas/Bank"
            },
            "examples": {
              "Schufa": {
                "$ref": "../schemas/bank.json#/components/examples/Schufa"
              },
              "Synchrone Bank": {
                "$ref": "../schemas/bank.json#/components/examples/SyncBank"
              },
              "Asynchrone Bank": {
                "$ref": "../schemas/bank.json#/components/examples/AsyncBank"
              }
            }
          }
        }
      },
      "200s": {
        "description": "Banks",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "title": "Banks",
              "items": {
                "$ref": "../schemas/bank.json#/components/schemas/Bank"
              },
              "minItems": 0,
              "uniqueItems": true
            },
            "examples": {
              "Banks": {
                "$ref": "../schemas/bank.json#/components/examples/Banks"
              }
            }
          }
        }
      }
    }
  }
}